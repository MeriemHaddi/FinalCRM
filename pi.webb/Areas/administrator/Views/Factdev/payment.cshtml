
@{
    ViewBag.Title = "payment";
    Layout = "~/Areas/administrator/Views/Shared/Head_Layout.cshtml";
}

<div class="title-bar">
    <div class="container">
        <ol class="breadcrumb">
            <li>
                <a class="breadcrumb-home" href="../../index.html"><span class="icon-Home_Page"></span><span class="bch-txt">Accueil</span></a>
            </li>

            <li class="active">Produit</li>

            <li>
                @Html.ActionLink("Panier", "panii", "Lignecmd")           |

                @Html.ActionLink("Mes devis", "affdevis", "Factdev")          |

                @Html.ActionLink("Historique", "histo", "Factdev")          |

                @Html.ActionLink("Mes bons", "affclt", "Boncmd")
            </li>
        </ol>

    </div>
    <div class="page-title">
        <div class="container">
            <h1>Paiement</h1>


        </div>
    </div>
</div>



<!-- Latest compiled and minified CSS -->

@section stripe{
    <script src="https://js.stripe.com/v3/"></script>

    <script>

        // Create a Stripe client.
        var stripe = Stripe('pk_test_jlBvo0tBvJkxowSRwkIHnQWr');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        // (Note that this demo uses a wider set of styles than the guide below.)
        var style = {
            base: {
                color: '#32325d',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '16px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', { style: style });

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server.
                    stripeTokenHandler(result.token);
                }
            });
        });

        // Submit the form with the token ID.
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }



    </script>

}




<h2>payment</h2>


<form action="/Factdev/payment" method="post" id="payment-form">
    <div class="form-row">
        <label for="card-element">
            Credit or debit card
        </label>
        <div id="card-element">
            <!-- A Stripe Element will be inserted here. -->
        </div>
        <input type="hidden" value=@ViewBag.qq name="reportName" />  
        <!-- Used to display form errors. -->
        <div id="card-errors" role="alert"></div>
    </div>
    <br /><br />
    <button class="btn btn-primary btn-lg btn-block">Submit Payment</button>
</form>
<br />
<br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />

 @ViewBag.qq

@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @ViewBag.qq
    @ViewBag.wn
    <input type="submit" value="payment" class="btn btn-default" />
}*@

